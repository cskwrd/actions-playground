# This is a basic workflow to help you get started with Actions

name: Debug git commit via SSH

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clone this repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '2' # setting to 2. this should be the normal case of a single commit per push. further along the job fetches more history as needed

      - name: Resolve file paths of changed files
        run: |
          echo "### Changed file path resolution" >> $GITHUB_STEP_SUMMARY

          commit_count=$(cat "${{ github.event_path }}" | jq '.commits | length')
          if [ "$commit_count" -gt 1 ]; then
            # bc there is more than one commit we need to fetch more history so we can find all of the changed files
            # TODO : investigate method for fetching a little more instead of all history
            git fetch --unshallow
            echo "Found $commit_count commits, fetched all repo history."
          else
            echo "Found $commit_count commit(s)."
          fi

          changed_file_count=0
          processed_file_count=0
          delim=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "FILES_CHANGED<<$delim" >> "$GITHUB_ENV"
          files_changed=$(git diff --name-only "${{ github.event.before }}" "${{ github.event.after }}")
          for file in $files_changed; do
            changed_file_count=$((changed_file_count+1))
            absolute_path=$(realpath "${{ github.workspace }}/$file")
            if [ -f "$absolute_path" ]; then #if [[ -f "$absolute_path" && "$file" =~ .*\.[Vv][Aa][Uu][Ll][Tt]\..* ]]; then
              processed_file_count=$((processed_file_count+1))
              echo "$absolute_path" >> "$GITHUB_ENV"
            fi
          done
          echo "$delim" >> "$GITHUB_ENV"
          echo "Processed $processed_file_count of $changed_file_count files changed."

      - name: Operate on changed files
        env:
          THE_VAULT_PASSWORD: super-secret
        run: |
          for file in $FILES_CHANGED; do
            if [ -f "$file" ]; then
              fname_no_extension=$(basename "${file%.*}")
              echo "Modified file name: '$fname_no_extension'"
            fi
          done
          # cd "$GITHUB_WORKSPACE"
          # mkdir -p intermediate
          # mkdir -p output/{html,pdf}
          # echo -n "$THE_VAULT_PASSWORD" > tvp.txt
          # for vault_file in data/*; do
          #   if [[ -f "$vault_file" && "$vault_file" =~ .*\.[Vv][Aa][Uu][Ll][Tt]\..* ]]; then
          #     fname_no_extension=$(basename "$vault_file" .vault.json)
          #     ansible-vault decrypt --vault-password-file tvp.txt --output "intermediate/${fname_no_extension}.json" "$vault_file" 2>/dev/null
          #     resume export --theme ./jsonresume-theme-stackoverflow -f .html --resume "intermediate/${fname_no_extension}.json" "output/html/${fname_no_extension}.html"
          #     resume export --theme ./jsonresume-theme-stackoverflow -f .pdf --resume "intermediate/${fname_no_extension}.json" "output/pdf/${fname_no_extension}.pdf"
          #     rm -rf "intermediate/${fname_no_extension}.json"
          #   fi
          # done
          # rm -rf tvp.txt

      - name: Setup tmate session
        env:
          GOPATH: ${{ github.workspace }}
          THE_EVENT_NAME: ${{ github.event_name }}
          THE_EVENT_PATH: ${{ github.event_path }}
          THE_EVENT_BEFORE: ${{ github.event.before }}
          THE_EVENT_AFTER: ${{ github.event.after }}
        uses: mxschmitt/action-tmate@v3
