# This is a basic workflow to help you get started with Actions

name: Debug git commit via SSH

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clone this repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '2' # this should solve most issues, if there end up being frequent occasions where this is not enough look at using `git fetch --unshallow` as a backup to pull the re

      - name: Print changed files
        env:
          THE_EVENT_PATH: ${{ github.event_path }}
          THE_EVENT_BEFORE: ${{ github.event.before }}
          THE_EVENT_AFTER: ${{ github.event.after }}
        run: |
          commit_count=$(cat "$THE_EVENT_PATH" | jq '.commits | length')
          if [ "$commit_count" -gt 1 ]; then
            # bc there is more than one commit we need to get more history so we can find all of the changed files
            echo "There are more than 1 commits, pulling more history..."
            git fetch --unshallow
          fi
          git diff --name-only "$THE_EVENT_BEFORE" "$THE_EVENT_AFTER"
          files_changed=$(git diff --name-only "$THE_EVENT_BEFORE" "$THE_EVENT_AFTER")
          for file in $files_changed; do
            absolute_path=$(realpath "${{ github.workspace }}/$file")
            echo "Processing file: $absolute_path"
            # Do something with each file
          done
          echo "DONE!!!"
          # cd "$GITHUB_WORKSPACE"
          # mkdir -p intermediate
          # mkdir -p output/{html,pdf}
          # echo -n "$THE_VAULT_PASSWORD" > tvp.txt
          # for vault_file in data/*; do
          #   if [[ -f "$vault_file" && "$vault_file" =~ .*\.[Vv][Aa][Uu][Ll][Tt]\..* ]]; then
          #     fname_no_extension=$(basename "$vault_file" .vault.json)
          #     ansible-vault decrypt --vault-password-file tvp.txt --output "intermediate/${fname_no_extension}.json" "$vault_file" 2>/dev/null
          #     resume export --theme ./jsonresume-theme-stackoverflow -f .html --resume "intermediate/${fname_no_extension}.json" "output/html/${fname_no_extension}.html"
          #     resume export --theme ./jsonresume-theme-stackoverflow -f .pdf --resume "intermediate/${fname_no_extension}.json" "output/pdf/${fname_no_extension}.pdf"
          #     rm -rf "intermediate/${fname_no_extension}.json"
          #   fi
          # done
          # rm -rf tvp.txt

      - name: Setup tmate session
        env:
          GOPATH: ${{ github.workspace }}
          THE_EVENT_NAME: ${{ github.event_name }}
          THE_EVENT_PATH: ${{ github.event_path }}
          THE_EVENT_BEFORE: ${{ github.event.before }}
          THE_EVENT_AFTER: ${{ github.event.after }}
        uses: mxschmitt/action-tmate@v3
